variables:
  TF_VERSION: "1.3.5"
  GCLOUD_VERSION: "411.0.0"

  BRANCH_NAME: "${CI_COMMIT_BRANCH}"
  OIDC_TOKEN: "${CI_JOB_JWT_V2}"

  BRANCH_NAME_APPLY: "main"

  BASE_DIR: "${CI_PROJECT_DIR}"
  POLICY_LIBRARY_FOLDER: "${BASE_DIR}/policy-library"

  BOOTSTRAP_PROJECT_ID: "BOOTSTRAP_PROJECT_ID_REPLACE"
  WORKLOAD_IDENTITY_PROVIDER_ID: "WORKLOAD_IDENTITY_PROVIDER_ID_REPLACE"

  TF_BOOTSTRAP_WORKING_DIR: "${BASE_DIR}/examples/gcp-bootstrap"
  TF_BOOTSTRAP_SERVICE_ACCOUNT: "TF_BOOTSTRAP_SERVICE_ACCOUNT_REPLACE"

  TF_ORG_WORKING_DIR: "${BASE_DIR}/1-org/envs"
  TF_ORG_SERVICE_ACCOUNT: "TF_ORG_SERVICE_ACCOUNT_REPLACE"

  TF_ENVIRONMENTS_WORKING_DIR: "${BASE_DIR}/2-environments/envs"
  TF_ENVIRONMENTS_SERVICE_ACCOUNT: "TF_ENVIRONMENTS_SERVICE_ACCOUNT_REPLACE"

  TF_NETWORKS_WORKING_DIR: "${BASE_DIR}/3-networks-hub-and-spoke/envs"
  TF_NETWORKS_SERVICE_ACCOUNT: "TF_NETWORKS_SERVICE_ACCOUNT_REPLACE"

  TF_PROJECTS_WORKING_DIR: "${BASE_DIR}/4-projects"
  TF_PROJECTS_SERVICE_ACCOUNT: "TF_PROJECTS_SERVICE_ACCOUNT_REPLACE"

  GOOGLE_APPLICATION_CREDENTIALS: "${BASE_DIR}/creds/.gcp_temp_cred.json"
  CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE: "${GOOGLE_APPLICATION_CREDENTIALS}"
  GOOGLE_GHA_CREDS_PATH: "${GOOGLE_APPLICATION_CREDENTIALS}"

  CLOUDSDK_CORE_PROJECT: "${BOOTSTRAP_PROJECT_ID}"
  CLOUDSDK_PROJECT: "${CLOUDSDK_CORE_PROJECT}"
  GCLOUD_PROJECT: "${CLOUDSDK_CORE_PROJECT}"
  GCP_PROJECT: "${CLOUDSDK_CORE_PROJECT}"
  GOOGLE_CLOUD_PROJECT: "${CLOUDSDK_CORE_PROJECT}"

stages:
  - Bootstrap
  - Organization
  - Environments
  - Networking

Bootstrap:
  stage: Bootstrap
  image:
    name: google/cloud-sdk:$GCLOUD_VERSION
  script:
    - |
      # Install Terraform
      /bin/bash ${BASE_DIR}/scripts/install-terraform.sh ${TF_VERSION}

      # Get credentials using Workload Identity Federation
      /bin/bash ${BASE_DIR}/scripts/gcloud-impersonate.sh ${TF_BOOTSTRAP_SERVICE_ACCOUNT} ${WORKLOAD_IDENTITY_PROVIDER_ID} ${OIDC_TOKEN} ${BOOTSTRAP_PROJECT_ID} ${BASE_DIR}

      # Terraform init, plan, validate, apply
      /bin/bash ${BASE_DIR}/scripts/execute-terraform.sh ${BASE_DIR} ${TF_BOOTSTRAP_WORKING_DIR} ${BRANCH_NAME} ${BRANCH_NAME_APPLY} ${BOOTSTRAP_PROJECT_ID} ${POLICY_LIBRARY_FOLDER}

Organization:
  stage: Organization
  dependencies:
    - Bootstrap
  image:
    name: google/cloud-sdk:$GCLOUD_VERSION
  script:
    - |
      # Install Terraform
      /bin/bash ${BASE_DIR}/scripts/install-terraform.sh ${TF_VERSION}

      # Get credentials using Workload Identity Federation
      /bin/bash ${BASE_DIR}/scripts/gcloud-impersonate.sh ${TF_ORG_SERVICE_ACCOUNT} ${WORKLOAD_IDENTITY_PROVIDER_ID} ${OIDC_TOKEN} ${BOOTSTRAP_PROJECT_ID} ${BASE_DIR}

      # Terraform init, plan, validate, apply
      /bin/bash ${BASE_DIR}/scripts/execute-terraform.sh ${BASE_DIR} ${TF_ORG_WORKING_DIR} ${BRANCH_NAME} ${BRANCH_NAME_APPLY} ${BOOTSTRAP_PROJECT_ID} ${POLICY_LIBRARY_FOLDER}

Environments:
  stage: Environments
  dependencies:
    - Organization
  image:
    name: google/cloud-sdk:$GCLOUD_VERSION
  script:
    - |
      # Install Terraform
      /bin/bash ${BASE_DIR}/scripts/install-terraform.sh ${TF_VERSION}

      # Get credentials using Workload Identity Federation
      /bin/bash ${BASE_DIR}/scripts/gcloud-impersonate.sh ${TF_ENVIRONMENTS_SERVICE_ACCOUNT} ${WORKLOAD_IDENTITY_PROVIDER_ID} ${OIDC_TOKEN} ${BOOTSTRAP_PROJECT_ID} ${BASE_DIR}

      # Terraform init, plan, validate, apply
      /bin/bash ${BASE_DIR}/scripts/execute-terraform.sh ${BASE_DIR} ${TF_ENVIRONMENTS_WORKING_DIR} ${BRANCH_NAME} ${BRANCH_NAME_APPLY} ${BOOTSTRAP_PROJECT_ID} ${POLICY_LIBRARY_FOLDER}

Networking:
  stage: Networking
  dependencies:
    - Environments
  image:
    name: google/cloud-sdk:$GCLOUD_VERSION
  script:
    - |
      #Install Terraform
      /bin/bash ${BASE_DIR}/scripts/install-terraform.sh ${TF_VERSION}

      # Get credentials using Workload Identity Federation
      /bin/bash ${BASE_DIR}/scripts/gcloud-impersonate.sh ${TF_NETWORKS_SERVICE_ACCOUNT} ${WORKLOAD_IDENTITY_PROVIDER_ID} ${OIDC_TOKEN} ${BOOTSTRAP_PROJECT_ID} ${BASE_DIR}

      # Terraform init, plan, validate, apply
      /bin/bash ${BASE_DIR}/scripts/execute-terraform.sh ${BASE_DIR} ${TF_NETWORKS_WORKING_DIR} ${BRANCH_NAME} ${BRANCH_NAME_APPLY} ${BOOTSTRAP_PROJECT_ID} ${POLICY_LIBRARY_FOLDER}
