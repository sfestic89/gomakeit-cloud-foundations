name: "Terraform"

on:
  workflow_dispatch:
  push:

permissions:
  id-token: write
  contents: read

env:
  TF_VERSION: "1.3.5"
  GCLOUD_VERSION: "411.0.0"

  BRANCH_NAME: "${{ github.ref_name }}"

  BRANCH_NAME_APPLY: "main"

  BASE_DIR: "${{ github.workspace }}"
  POLICY_LIBRARY_FOLDER: "${{ github.workspace }}/policy-library"

  BOOTSTRAP_PROJECT_ID: "BOOTSTRAP_PROJECT_ID_REPLACE"
  WORKLOAD_IDENTITY_PROVIDER_ID: "WORKLOAD_IDENTITY_PROVIDER_ID_REPLACE"

  TF_BOOTSTRAP_WORKING_DIR: "${{ github.workspace }}/examples/gcp-bootstrap"
  TF_BOOTSTRAP_SERVICE_ACCOUNT: "TF_BOOTSTRAP_SERVICE_ACCOUNT_REPLACE"

  TF_ORG_WORKING_DIR: "${{ github.workspace }}/1-org/envs"
  TF_ORG_SERVICE_ACCOUNT: "TF_ORG_SERVICE_ACCOUNT_REPLACE"

  TF_ENVIRONMENTS_WORKING_DIR: "${{ github.workspace }}/2-environments/envs"
  TF_ENVIRONMENTS_SERVICE_ACCOUNT: "TF_ENVIRONMENTS_SERVICE_ACCOUNT_REPLACE"

  TF_NETWORKS_WORKING_DIR: "${{ github.workspace }}/3-networks-hub-and-spoke/envs"
  TF_NETWORKS_SERVICE_ACCOUNT: "TF_NETWORKS_SERVICE_ACCOUNT_REPLACE"

  TF_PROJECTS_WORKING_DIR: "${{ github.workspace }}/4-projects"
  TF_PROJECTS_SERVICE_ACCOUNT: "TF_PROJECTS_SERVICE_ACCOUNT_REPLACE"

jobs:
  Bootstrap:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository for module Bootstrap
      - name: Checkout the repository for module Bootstrap
        uses: actions/checkout@v3

      # Authenticate to GCP using OIDC and Workload Identity for module Bootstrap
      - name: Authenticate to GCP for module Bootstrap
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: "true"
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ env.TF_BOOTSTRAP_SERVICE_ACCOUNT }}

      # Setup Terraform for module Bootstrap
      - name: Setup Terraform for module Bootstrap
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      # Setup gcloud for module Bootstrap
      - name: Setup gcloud for module Bootstrap
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ${{ env.GCLOUD_VERSION }}
          install_components: "beta,terraform-tools"

      # Run Terraform for module Bootstrap
      # Terraform init, plan, validate, apply
      - name: terraform init, plan, validate, apply for module Bootstrap
        run: |-
          /bin/bash ${BASE_DIR}/scripts/execute-terraform.sh ${BASE_DIR} ${TF_BOOTSTRAP_WORKING_DIR} ${BRANCH_NAME} ${BRANCH_NAME_APPLY} ${BOOTSTRAP_PROJECT_ID} ${POLICY_LIBRARY_FOLDER}

  Organization:
    runs-on: ubuntu-latest
    needs: Bootstrap
    steps:
      # Checkout the repository for module Organization
      - name: Checkout the repository for module Organization
        uses: actions/checkout@v3

      # Authenticate to GCP using OIDC and Workload Identity for module Organization
      - name: Authenticate to GCP for module Organization
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: "true"
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ env.TF_ORG_SERVICE_ACCOUNT }}

      # Setup Terraform for module Organization
      - name: Setup Terraform for module Organization
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      # Setup gcloud for module Organization
      - name: Setup gcloud for module Organization
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ${{ env.GCLOUD_VERSION }}
          install_components: "beta,terraform-tools"

      # Run Terraform for module Organization
      # Terraform init, plan, validate, apply
      - name: terraform init, plan, validate, apply for module Organization
        run: |-
          /bin/bash ${BASE_DIR}/scripts/execute-terraform.sh ${BASE_DIR} ${TF_ORG_WORKING_DIR} ${BRANCH_NAME} ${BRANCH_NAME_APPLY} ${BOOTSTRAP_PROJECT_ID} ${POLICY_LIBRARY_FOLDER}

  Environments:
    runs-on: ubuntu-latest
    needs: Organization
    steps:
      # Checkout the repository for module Environments
      - name: Checkout the repository for module Environments
        uses: actions/checkout@v3

      # Authenticate to GCP using OIDC and Workload Identity for module Environments
      - name: Authenticate to GCP for module Environments
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: "true"
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ env.TF_ENVIRONMENTS_SERVICE_ACCOUNT }}

      # Setup Terraform for module Environments
      - name: Setup Terraform for module Environments
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      # Setup gcloud for module Environments
      - name: Setup gcloud for module Environments
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ${{ env.GCLOUD_VERSION }}
          install_components: "beta,terraform-tools"

      # Run Terraform for module Environments
      # Terraform init, plan, validate, apply
      - name: terraform init, plan, validate, apply for module Environments
        run: |-
          /bin/bash ${BASE_DIR}/scripts/execute-terraform.sh ${BASE_DIR} ${TF_ENVIRONMENTS_WORKING_DIR} ${BRANCH_NAME} ${BRANCH_NAME_APPLY} ${BOOTSTRAP_PROJECT_ID} ${POLICY_LIBRARY_FOLDER}

  Networking:
    needs: Environments
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository for module Networking
      - name: Checkout the repository for module Networking
        uses: actions/checkout@v3

      # Authenticate to GCP using OIDC and Workload Identity for module Networking
      - name: Authenticate to GCP for module Networking
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: "true"
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: ${{ env.TF_NETWORKS_SERVICE_ACCOUNT }}

      # Setup Terraform for module Networking
      - name: Setup Terraform for module Networking
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      # Setup gcloud for module Networking
      - name: Setup gcloud for module Networking
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: ${{ env.GCLOUD_VERSION }}
          install_components: "beta,terraform-tools"

      # Run Terraform for module Networking
      # Terraform init, plan, validate, apply
      - name: terraform init, plan, validate, apply for module Networking
        run: |-
          /bin/bash ${BASE_DIR}/scripts/execute-terraform.sh ${BASE_DIR} ${TF_NETWORKS_WORKING_DIR} ${BRANCH_NAME} ${BRANCH_NAME_APPLY} ${BOOTSTRAP_PROJECT_ID} ${POLICY_LIBRARY_FOLDER}
